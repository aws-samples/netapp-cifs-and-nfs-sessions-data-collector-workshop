---
services:    
  database:
    image: postgres:alpine3.20
    hostname: postgres
    container_name: postgres
    restart: always
    shm_size: 4gb
    volumes:
      - ./database:/var/lib/postgresql/data:rw
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - collector.env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  data_collector:
    build:
      context: ./app
    depends_on: 
      database:
        condition: service_healthy
    image: netappcollector:1.03
    hostname: webserver
    container_name: webserver
    restart: always
    working_dir: /usr/netappcollector/
    read_only: true
    volumes:
      - ./app:/usr/netappcollector/app/:ro
      - ./commons:/usr/netappcollector/commons:ro
      - ./logs:/usr/netappcollector/logs/:rw
      - ./output:/usr/netappcollector/output:rw
      - ./filters.json:/usr/netappcollector/filters.json:ro
      - ./cache:/root/.cache/:rw
    entrypoint: /bin/bash /usr/netappcollector/commons/entrypoint.sh
    environment:
      - PROJECT_HOME=/usr/netappcollector/
      - POSTGRES_HOSTNAME=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_DATABASE=postgres
      - MPLCONFIGDIR=/root/.cache
    env_file:
      - collector.env
    security_opt:
      - no-new-privileges:true
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8080"]
      interval: 5s
      timeout: 5s
      retries: 5
